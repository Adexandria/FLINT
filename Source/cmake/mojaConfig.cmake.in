if (CMAKE_VERSION VERSION_LESS 3.10.0)
    message(FATAL_ERROR "moja requires at least CMake version 3.10.0")
endif()

if (NOT moja_FIND_COMPONENTS)
    set(moja_NOT_FOUND_MESSAGE "The moja package requires at least one component")
    set(moja_FOUND False)
    return()
endif()


set(_moja_FIND_PARTS_REQUIRED)
if (moja_FIND_REQUIRED)
    set(_moja_FIND_PARTS_REQUIRED REQUIRED)
endif()
set(_moja_FIND_PARTS_QUIET)
if (moja_FIND_QUIETLY)
    set(_moja_FIND_PARTS_QUIET QUIET)
endif()

get_filename_component(_moja_install_prefix "${CMAKE_CURRENT_LIST_DIR}" ABSOLUTE)

set(_moja_NOTFOUND_MESSAGE)

# Let components find each other, but don't overwrite CMAKE_PREFIX_PATH
set(_moja_CMAKE_PREFIX_PATH_old ${CMAKE_PREFIX_PATH})
set(CMAKE_PREFIX_PATH ${_moja_install_prefix})

foreach(module ${moja_FIND_COMPONENTS})
    find_package(${module}
        ${_moja_FIND_PARTS_QUIET}
        ${_moja_FIND_PARTS_REQUIRED}
        PATHS "${_moja_install_prefix}" NO_DEFAULT_PATH
    )
    if (NOT ${module}_FOUND)
        if (moja_FIND_REQUIRED_${module})
            set(_moja_NOTFOUND_MESSAGE "${_moja_NOTFOUND_MESSAGE}Failed to find moja component \"${module}\" config file at \"${_moja_install_prefix}/${module}/${module}Config.cmake\"\n")
        elseif(NOT moja_FIND_QUIETLY)
            message(WARNING "Failed to find moja component \"${module}\" config file at \"${_moja_install_prefix}/${module}/${module}Config.cmake\"")
        endif()
    endif()

    # For backward compatibility set the LIBRARIES variable
    list(APPEND moja_LIBRARIES "moja::${module}")
endforeach()

# Restore the original CMAKE_PREFIX_PATH value
set(CMAKE_PREFIX_PATH ${_moja_CMAKE_PREFIX_PATH_old})

if (_moja_NOTFOUND_MESSAGE)
    set(moja_NOT_FOUND_MESSAGE "${_moja_NOTFOUND_MESSAGE}")
    set(moja_FOUND False)
endif()
